<!DOCTYPE HTML>
<html>

<head>
    <title>Data</title>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1, user-scalable=no" />
    <script src="../../libraries/utils.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/vega@5.12.1"></script>
    <script src="https://cdn.jsdelivr.net/npm/vega-lite@4.13.1"></script>
    <script src="https://cdn.jsdelivr.net/npm/vega-embed@6.8.0"></script>
    <script src="../../libraries/plotly-latest.min.js"></script>
</head>

<body class="is-preload">
    <header id="header">
        <h1>Delay discounting results</h1>
        <p id="subject">Subject: </p>
        <p id="auc">AUC: </p>
    </header>
    <div id="main">
        <div id="indiff_curve" style="width:100%;height:100%;"></div>
        </section>
    </div>
    <script>
        // retrieve objects from sessionStorage
        datasummary = sessionStorage.getObj("datasummary_delaydiscount_");
        info = sessionStorage.getObj("info_");

        var auc = datasummary.auc.toFixed(4);
        var subject_id = info.subject;
        var id_header = document.getElementById("subject");
        id_header.textContent += subject_id;
        var auc_header = document.getElementById("auc");
        auc_header.textContent += auc;

        console.log('subject id: ' + subject_id);
        console.log('datasummary_')
        console.log(datasummary)
    </script>
    <script>

        // plot indifference (y) against delay (x)

        var delayed_reward = datasummary.delayed_reward[0]; // x axis
        var indiff = datasummary.indifference; // y axis
        var indiff_normed = divide(indiff, delayed_reward); // normalize y axis to range from 0 to 1

        var trace = {
            x: datasummary.cost,
            y: indiff_normed,
            mode: 'markers',
            type: 'scatter',
            marker: {
                size: 15,
                color: [1, 1, 1, 1, 2], // TODO Frank: behaves in a funny way...
                colorscale: 'Viridis', // TODO Frank, can't change color scheme...
            }
        };

        var data = [trace];

        var layout = {
            autosize: true,
            automargin: true,
            // width: 800, // https://plotly.com/javascript/setting-graph-size/
            height: 700,
            title: {
                text: 'Discounting curve<br>Area-under-curve: ' + auc,
                font: { size: 32 }
            },
            xaxis: {
                title: {
                    text: "Delay (days to reward)",
                    font: {
                        size: 24
                    }
                },
                tickwidth: 4, // https://plotly.com/javascript/axes/#toggling-axes-lines-ticks-labels-and-autorange
                ticklen: 8,
                ticks: 'inside',
                tickfont: { // https://plotly.com/javascript/reference/#layout-scene-xaxis-tickfont-size
                    size: 20
                }
            },
            yaxis: {
                title: {
                    text: "Subjective value",
                    font: {
                        size: 24
                    }
                },
                range: [-0.05, 1.05],
                tickfont: {
                    size: 20
                }
            }
        };

        var config = { responsive: true }; // https://plotly.com/javascript/responsive-fluid-layout/

        Plotly.newPlot('indiff_curve', data, layout, config);
    </script>

    <div id="vis"></div>

    <script type="text/javascript">
        var yourVlSpec = {
            $schema: 'https://vega.github.io/schema/vega-lite/v2.0.json',
            description: 'A simple bar chart with embedded data.',
            data: {
                values: [
                    { a: 'A', b: 28 },
                    { a: 'B', b: 55 },
                    { a: 'C', b: 43 },
                    { a: 'D', b: 91 },
                    { a: 'E', b: 81 },
                    { a: 'F', b: 53 },
                    { a: 'G', b: 19 },
                    { a: 'H', b: 87 },
                    { a: 'I', b: 52 }
                ]
            },
            mark: 'bar',
            encoding: {
                x: { field: 'a', type: 'ordinal' },
                y: { field: 'b', type: 'quantitative' }
            }
        };
        vegaEmbed('#vis', yourVlSpec);
    </script>



</body>

</html>